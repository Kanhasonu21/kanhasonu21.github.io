{"version":3,"sources":["api/api.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","appid","then","res","catch","err","console","log","response","App","useState","setQuery","weather","setWeather","error","setError","searchInput","useRef","useEffect","current","focus","search","e","key","data","className","type","placeholder","ref","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"sRAkBeA,EAbG,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACIC,IACpBC,IALO,kDAKE,CACRC,OAAQ,CACNC,EAAGL,EACHM,MAPQ,sCAUXC,MAAK,SAACC,GACL,OAAOA,KACNC,OAAM,SAAAC,GAAG,OAAGC,QAAQC,IAAIF,MAVV,cACbG,EADa,yBAWZA,GAXY,2CAAH,sD,MCiEHC,MAhEf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNf,EADM,KACCgB,EADD,OAEiBD,mBAAS,IAF1B,mBAENE,EAFM,KAEGC,EAFH,OAGaH,mBAAS,IAHtB,mBAGNI,EAHM,KAGCC,EAHD,KAIPC,EAAcC,iBAAO,MAC3BC,qBAAU,WACRF,EAAYG,QAAQC,UACnB,CAACzB,IACJ,IAAM0B,EAAM,uCAAG,WAAOC,GAAP,eAAA1B,EAAA,yDACC,UAAV0B,EAAEC,IADO,0CAGU7B,EAAaC,GAHvB,QAGH6B,EAHG,QAKPX,EAAWW,EAAKA,OAEhBX,EAAW,IACXE,EAAS,oBARF,gDAWTT,QAAQC,IAAR,MAXS,yDAAH,sDAeZ,OACE,yBAAKkB,UAAU,kBACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAYA,UAAU,sBACtB,2BACEC,KAAK,OACLC,YAAY,kBACZC,IAAKZ,EACLa,MAAOlC,EACPmC,SAAU,SAACR,GAAD,OAAOX,EAASW,EAAES,OAAOF,QACnCG,WAAYX,KAKfT,EAAQqB,KACP,yBAAKR,UAAU,QACb,wBAAIA,UAAU,aACZ,8BAAOb,EAAQsB,MACf,6BAAMtB,EAAQuB,IAAIC,UAEpB,yBAAKX,UAAU,aACZY,KAAKC,MAAM1B,EAAQqB,KAAKM,MAAQ,IACjC,uCAEF,yBAAKd,UAAU,QACb,yBACEe,IAAG,4CAAuC5B,EAAQA,QAAQ,GAAG6B,KAA1D,WACHC,IAAK9B,EAAQA,QAAQ,GAAG+B,YACxBlB,UAAU,cAEZ,2BAAIb,EAAQA,QAAQ,GAAG+B,eAI3B,uBAAGlB,UAAU,SAASX,KC5D9B8B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.47ba683b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst URL = \"https://api.openweathermap.org/data/2.5/weather\";\nconst API_KEY = \"d43aecf362a9347c1eceb9a75d203ca4\";\n\nconst fetchWeather = async (query) => {\n  const response = await axios\n    .get(URL, {\n      params: {\n        q: query,\n        appid: API_KEY,\n      },\n    })\n    .then((res) => {\n      return res\n    }).catch(err=> console.log(err))\n  return response;\n};\nexport default fetchWeather;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport fetchWeather from \"./api/api\";\nimport \"./App.css\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [error, setError] = useState(\"\");\n  const searchInput = useRef(null);\n  useEffect(() => {\n    searchInput.current.focus();\n  }, [query]);\n  const search = async (e) => {\n    if (e.key === \"Enter\") {\n      try {\n        const data = await fetchWeather(query);\n        if (data) {\n          setWeather(data.data);\n        } else {\n          setWeather(\"\");\n          setError(\"No Result Found\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  return (\n    <div className=\"main-container\">\n      <div className=\"search__input\">\n        <SearchIcon className=\"search__inputIcon\" />\n        <input\n          type=\"text\"\n          placeholder=\"Enter city name\"\n          ref={searchInput}\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          onKeyPress={search}\n\n        />\n      </div>\n\n      {weather.main ? (\n        <div className=\"city\">\n          <h2 className=\"city-name\">\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n          <div className=\"city-temp\">\n            {Math.round(weather.main.temp) - 273}\n            <sup>&deg;C</sup>\n          </div>\n          <div className=\"info\">\n            <img\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              alt={weather.weather[0].description}\n              className=\"city-icon\"\n            />\n            <p>{weather.weather[0].description}</p>\n          </div>\n        </div>\n      ) : (\n        <p className=\"error\">{error}</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}